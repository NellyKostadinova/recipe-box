{"version":3,"sources":["common/Logo/Logo.js","common/Header/Header.js","common/Footer/Footer.js","_helpers.js","components/TagList/TagList.js","components/RecipeCard/RecipeCard.js","components/RecipeGrid/RecipeGrid.js","hooks/useRecipeForm.js","components/EditableList/EditableList.js","components/RecipeForm/RecipeForm.js","pages/AddRecipePage.js","components/DifficultyLevel/DifficultyLevel.js","components/RecipeSection/RecipeSection.js","components/FocusRecipe/FocusRecipe.js","pages/ViewRecipePage.js","App.js","serviceWorker.js","index.js"],"names":["Logo","id","height","viewBox","width","xmlns","className","style","fill","d","Header","to","Footer","href","title","mockImage","ID","Math","random","toString","substr","cleanList","list","filter","item","cleanRecipe","recipe","_categories","categories","_ingredients","ingredients","_instructions","instructions","getLocalStorageRecipes","JSON","parse","window","localStorage","getItem","TagList","props","tags","map","index","key","RecipeCard","backgroundImage","imgUrl","RecipeGrid","recipes","useRecipeForm","callback","useState","difficulty","setRecipe","handlers","onChange","event","target","name","value","onListChange","_list","onDifficultyChange","val","onAddItem","preventDefault","onSubmit","EditableList","InputTag","inputTag","ListTag","ordered","items","placeholder","required","inputClassName","onClick","RecipeForm","type","initialRating","fullSymbol","emptySymbol","src","alt","AddRecipePage","saveRecipe","history","push","useHistory","DifficultyLevel","level","readonly","RecipeSection","FocusRecipe","onError","ViewRecipePage","setEditing","editing","useParams","useEffect","recipeArr","find","getRecipe","deleteRecipe","App","localRecipes","setLocalRecipes","_recipes","cleanedRecipe","localRecipe","storedRecipes","length","idfiedRecipes","sampleRecipes","setItem","stringify","setLocalStorageRecipes","exact","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.64b4f280.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Logo() {\r\n  return (\r\n    <svg\r\n      id=\"Glyph\"\r\n      height=\"512\"\r\n      viewBox=\"0 0 512 512\"\r\n      width=\"512\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"logo\"\r\n    >\r\n      <path\r\n        style={{ fill: '#1f1f1f' }}\r\n        d=\"m392 64a87.115 87.115 0 0 0 -31.683 5.878 126.93 126.93 0 0 1 19.08 39.994 8 8 0 1 1 -15.422 4.256 112.016 112.016 0 0 0 -187.237-49.244 103.994 103.994 0 0 1 47.262 87.116 8 8 0 0 1 -16 0 88 88 0 1 0 -105.771 86.206 8 8 0 0 1 6.281 6.5l26.251 155.294h48.647l-7.387-103.43h.008c-.014-.189-.029-.377-.029-.569a8 8 0 0 1 15.971-.569h.008l7.47 104.568h48.551v-88a8 8 0 0 1 16 0v88h48.551l7.47-104.57h.008a8 8 0 0 1 15.971.57c0 .192-.015.38-.029.569h.008l-7.387 103.431h48.647l26.251-155.291a8 8 0 0 1 6.281-6.5 88.01 88.01 0 0 0 -17.771-174.209z\"\r\n      />\r\n      <path style={{ fill: '#1f1f1f' }} d=\"m136 416h240v64h-240z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../Logo/Logo';\r\nimport './Header.scss';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand\">\r\n          <Logo />\r\n          <h2>Recipe Box</h2>\r\n        </Link>\r\n        <nav>\r\n          <Link to=\"/add\" className=\"button icon-button add-recipe\">\r\n            Add new recipe\r\n          </Link>\r\n          <Link to=\"/shopping-list\" className=\"button icon-button list\">\r\n            Shopping List\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <nav>\r\n          <a href=\"https://github.com/NellyKostadinova\">GitHub</a>\r\n          <a href=\"https://www.linkedin.com/in/nelly-kostadinova-aab60196/\">\r\n            Linkedin\r\n          </a>\r\n        </nav>\r\n        <div className=\"credits\">\r\n          Icons made by{' '}\r\n          <a href=\"https://www.flaticon.com/authors/iconixar\" title=\"iconixar\">\r\n            iconixar\r\n          </a>{' '}\r\n          from{' '}\r\n          <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n            www.flaticon.com\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","const mockImage =\r\n  'https://images.unsplash.com/photo-1517856497829-3047e3fffae1?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80';\r\n\r\nfunction ID() {\r\n  return (\r\n    '_' +\r\n    Math.random()\r\n      .toString(36)\r\n      .substr(2, 9)\r\n  );\r\n}\r\n\r\nfunction cleanList(list) {\r\n  return list.filter(item => item !== '');\r\n}\r\n\r\nfunction cleanRecipe(recipe) {\r\n  let _categories = cleanList(recipe.categories);\r\n  let _ingredients = cleanList(recipe.ingredients);\r\n  let _instructions = cleanList(recipe.instructions);\r\n  return {\r\n    ...recipe,\r\n    categories: _categories,\r\n    ingredients: _ingredients,\r\n    instructions: _instructions\r\n  };\r\n}\r\n\r\nfunction getRecipe(recipeArr, id) {\r\n  return recipeArr.find(recipe => recipe.id === id);\r\n}\r\n\r\nfunction getLocalStorageRecipes() {\r\n  return JSON.parse(window.localStorage.getItem('rbRecipes'));\r\n}\r\n\r\nfunction setLocalStorageRecipes(recipes) {\r\n  window.localStorage.setItem('rbRecipes', JSON.stringify(recipes));\r\n}\r\n\r\nexport {\r\n  mockImage,\r\n  ID,\r\n  cleanList,\r\n  cleanRecipe,\r\n  getRecipe,\r\n  getLocalStorageRecipes,\r\n  setLocalStorageRecipes\r\n};\r\n","import React from 'react';\r\nimport './TagList.scss';\r\n\r\nfunction TagList(props) {\r\n  return (\r\n    <ul className=\"tag-list\">\r\n      {props.tags.map((item, index) => {\r\n        return (\r\n          <li className=\"category-tag\" key={index}>\r\n            {item}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TagList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { mockImage } from '../../_helpers';\r\nimport TagList from '../TagList/TagList';\r\nimport './RecipeCard.scss';\r\n\r\nfunction RecipeCard(props) {\r\n  return (\r\n    <div className=\"recipe-card\">\r\n      <div\r\n        className=\"card-img\"\r\n        style={{ backgroundImage: `url(${props.imgUrl || mockImage})` }}\r\n      ></div>\r\n      <div className=\"card-info\">\r\n        <TagList tags={props.categories} />\r\n        <h3>{props.title}</h3>\r\n        <Link to={`/recipe/${props.id}`}>\r\n          <button>Open recipe</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeCard;\r\n","import React from 'react';\r\nimport RecipeCard from '../RecipeCard/RecipeCard';\r\nimport './RecipeGrid.scss';\r\n\r\nfunction RecipeGrid(props) {\r\n  return (\r\n    <section className=\"recipes-grid\">\r\n      {props.recipes.map(recipe => {\r\n        return <RecipeCard {...recipe} key={recipe.id} />;\r\n      })}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default RecipeGrid;\r\n","import { useState } from 'react';\r\nimport { cleanRecipe } from '../_helpers';\r\n\r\nfunction useRecipeForm(callback) {\r\n  const [recipe, setRecipe] = useState({\r\n    id: null,\r\n    title: '',\r\n    categories: [''],\r\n    imgUrl: '',\r\n    ingredients: [''],\r\n    instructions: [''],\r\n    difficulty: 1\r\n  });\r\n\r\n  function onChange(event) {\r\n    setRecipe({ ...recipe, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  function onListChange(index, event) {\r\n    let _list = recipe[event.target.name];\r\n    _list[index] = event.target.value;\r\n    setRecipe({ ...recipe, [event.target.name]: _list });\r\n  }\r\n\r\n  function onDifficultyChange(val) {\r\n    setRecipe({ ...recipe, difficulty: val });\r\n  }\r\n\r\n  function onAddItem(event) {\r\n    event.preventDefault();\r\n    let _list = [...recipe[event.target.name], ''];\r\n    setRecipe({ ...recipe, [event.target.name]: _list });\r\n  }\r\n\r\n  function onSubmit(event) {\r\n    event.preventDefault();\r\n    setRecipe(cleanRecipe(recipe));\r\n    callback();\r\n  }\r\n\r\n  return {\r\n    recipe,\r\n    setRecipe,\r\n    handlers: {\r\n      onChange,\r\n      onListChange,\r\n      onDifficultyChange,\r\n      onAddItem,\r\n      onSubmit\r\n    }\r\n  };\r\n}\r\n\r\nexport default useRecipeForm;\r\n","import React from 'react';\r\n\r\nfunction EditableList(props) {\r\n  const InputTag = props.inputTag || 'input';\r\n  const ListTag = props.ordered ? 'ol' : 'ul';\r\n\r\n  return (\r\n    <ListTag className={props.className}>\r\n      {props.items.map((item, index) => {\r\n        return (\r\n          <li key={index}>\r\n            <InputTag\r\n              name={props.name}\r\n              value={item}\r\n              placeholder={props.placeholder}\r\n              onChange={event => {\r\n                props.onChange(index, event);\r\n              }}\r\n              required={index === 0 ? true : false}\r\n              className={props.inputClassName}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n      <button className=\"add sm\" name={props.name} onClick={props.onAddItem}>\r\n        +\r\n      </button>\r\n    </ListTag>\r\n  );\r\n}\r\n\r\nexport default EditableList;\r\n","import React from 'react';\r\nimport { mockImage } from '../../_helpers';\r\nimport EditableList from '../EditableList/EditableList';\r\nimport Rating from 'react-rating';\r\n\r\nfunction RecipeForm(props) {\r\n  return (\r\n    <section>\r\n      <form onSubmit={props.onSubmit}>\r\n        <div className=\"focus-recipe\">\r\n          <div className=\"recipe-info\">\r\n            <input\r\n              name=\"title\"\r\n              value={props.title}\r\n              placeholder=\"My new recipe\"\r\n              required\r\n              onChange={props.onChange}\r\n              type=\"text\"\r\n              className=\"recipe-title\"\r\n            />\r\n            <EditableList\r\n              items={props.categories}\r\n              name=\"categories\"\r\n              placeholder=\"category\"\r\n              onChange={props.onListChange}\r\n              onAddItem={props.onAddItem}\r\n              className=\"tag-list\"\r\n              inputClassName=\"category-tag\"\r\n            />\r\n            <label>Difficulty: </label>\r\n            <Rating\r\n              initialRating={props.difficulty}\r\n              fullSymbol={<div className=\"full\"></div>}\r\n              emptySymbol={<div></div>}\r\n              className=\"scale\"\r\n              name=\"difficulty\"\r\n              onChange={props.onDifficultyChange}\r\n            />\r\n            <div className=\"recipe-section\">\r\n              <h2>Ingredients:</h2>\r\n              <EditableList\r\n                items={props.ingredients}\r\n                name=\"ingredients\"\r\n                onChange={props.onListChange}\r\n                onAddItem={props.onAddItem}\r\n              />\r\n            </div>\r\n            <div className=\"recipe-section\">\r\n              <h2>Instructions:</h2>\r\n              <EditableList\r\n                items={props.instructions}\r\n                name=\"instructions\"\r\n                onChange={props.onListChange}\r\n                onAddItem={props.onAddItem}\r\n                inputTag=\"textarea\"\r\n                ordered={true}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"recipe-image\">\r\n            <img src={props.imgUrl || mockImage} alt={props.title} />\r\n            <input\r\n              name=\"imgUrl\"\r\n              value={props.imgUrl}\r\n              placeholder=\"Image URL\"\r\n              onChange={props.onChange}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <input type=\"submit\" value=\"Save\" className=\"button\" />\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default RecipeForm;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useRecipeForm from '../hooks/useRecipeForm';\r\nimport RecipeForm from '../components/RecipeForm/RecipeForm';\r\n\r\nfunction AddRecipePage(props) {\r\n  const { recipe, handlers } = useRecipeForm(handleSave);\r\n  const history = useHistory();\r\n\r\n  function handleSave() {\r\n    props.saveRecipe(recipe);\r\n    history.push('/');\r\n  }\r\n\r\n  return <RecipeForm {...recipe} {...handlers} />;\r\n}\r\n\r\nexport default AddRecipePage;\r\n","import React from 'react';\r\nimport Rating from 'react-rating';\r\nimport './DifficultyLevel.scss';\r\n\r\nfunction DifficultyLevel(props) {\r\n  return (\r\n    <figure className=\"difficulty\">\r\n      <figcaption>Difficulty:</figcaption>\r\n      <Rating\r\n        initialRating={props.level}\r\n        readonly=\"readonly\"\r\n        fullSymbol={<div className=\"full\"></div>}\r\n        emptySymbol={<div></div>}\r\n        className=\"scale\"\r\n      />\r\n    </figure>\r\n  );\r\n}\r\n\r\nexport default DifficultyLevel;\r\n","import React from 'react';\r\nimport './RecipeSection.scss';\r\n\r\nfunction RecipeSection(props) {\r\n  const ListTag = props.ordered ? 'ol' : 'ul';\r\n\r\n  return (\r\n    <div className={props.className + ' recipe-section'}>\r\n      <h2>{props.title}</h2>\r\n      <ListTag>\r\n        {props.items.map((item, index) => {\r\n          return <li key={index}>{item}</li>;\r\n        })}\r\n      </ListTag>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeSection;\r\n","import React from 'react';\r\nimport { mockImage } from '../../_helpers';\r\nimport TagList from '../TagList/TagList';\r\nimport DifficultyLevel from '../DifficultyLevel/DifficultyLevel';\r\nimport RecipeSection from '../RecipeSection/RecipeSection';\r\nimport './FocusRecipe.scss';\r\n\r\nfunction FocusRecipe(props) {\r\n  function handleImageError(event) {\r\n    event.target.src = mockImage;\r\n  }\r\n  return (\r\n    <section>\r\n      <article className=\"focus-recipe\">\r\n        <div className=\"recipe-info\">\r\n          <h1>{props.title}</h1>\r\n          <TagList tags={props.categories} />\r\n          <DifficultyLevel level={props.difficulty} />\r\n          <RecipeSection\r\n            title=\"Ingredients:\"\r\n            items={props.ingredients}\r\n            ordered={false}\r\n            className=\"recipe-ingredients\"\r\n          />\r\n          <RecipeSection\r\n            title=\"Instructions:\"\r\n            items={props.instructions}\r\n            ordered={true}\r\n            className=\"recipe-instructions\"\r\n          />\r\n        </div>\r\n        <div className=\"recipe-image\">\r\n          <img\r\n            src={props.imgUrl}\r\n            alt={props.title}\r\n            onError={handleImageError}\r\n          ></img>\r\n        </div>\r\n      </article>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default FocusRecipe;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport useRecipeForm from '../hooks/useRecipeForm';\r\nimport { getRecipe, getLocalStorageRecipes } from '../_helpers';\r\nimport RecipeForm from '../components/RecipeForm/RecipeForm';\r\nimport FocusRecipe from '../components/FocusRecipe/FocusRecipe';\r\n\r\nfunction ViewRecipePage(props) {\r\n  const { recipe, setRecipe, handlers } = useRecipeForm(handleSave);\r\n  const [editing, setEditing] = useState(false);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    setRecipe(getRecipe(getLocalStorageRecipes(), id));\r\n  }, [id, setRecipe]);\r\n\r\n  function handleEdit() {\r\n    setEditing(true);\r\n  }\r\n\r\n  function handleCancel() {\r\n    setEditing(false);\r\n  }\r\n\r\n  function handleSave() {\r\n    props.saveRecipe(recipe);\r\n    setEditing(false);\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <nav className=\"recipe-nav\">\r\n        <Link to=\"/\" className=\"button icon-button back\">\r\n          Back\r\n        </Link>\r\n        <button className=\"edit\" onClick={editing ? handleCancel : handleEdit}>\r\n          {editing ? 'Cancel' : 'Edit'}\r\n        </button>\r\n        <button\r\n          className=\"danger\"\r\n          onClick={() => {\r\n            props.deleteRecipe(recipe.id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </nav>\r\n      {editing ? (\r\n        <RecipeForm {...recipe} {...handlers} />\r\n      ) : (\r\n        <FocusRecipe {...recipe} />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ViewRecipePage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Header from './common/Header/Header';\r\nimport Footer from './common/Footer/Footer';\r\nimport {\r\n  ID,\r\n  cleanRecipe,\r\n  setLocalStorageRecipes,\r\n  getLocalStorageRecipes\r\n} from './_helpers';\r\nimport sampleRecipes from './assets/recipes';\r\nimport './App.scss';\r\nimport { Switch, Route, useHistory } from 'react-router-dom';\r\nimport RecipeGrid from './components/RecipeGrid/RecipeGrid';\r\nimport AddRecipePage from './pages/AddRecipePage';\r\nimport ViewRecipePage from './pages/ViewRecipePage';\r\n\r\nfunction App() {\r\n  const [localRecipes, setLocalRecipes] = useState([]);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let storedRecipes = getLocalStorageRecipes();\r\n\r\n    if (storedRecipes && storedRecipes.length > 0) {\r\n      setLocalRecipes(storedRecipes);\r\n    } else {\r\n      let idfiedRecipes = sampleRecipes.map(recipe => {\r\n        recipe.id = ID();\r\n        return recipe;\r\n      });\r\n      setLocalRecipes(idfiedRecipes);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLocalStorageRecipes(localRecipes);\r\n  }, [localRecipes]);\r\n\r\n  function deleteRecipe(id) {\r\n    history.push('/');\r\n    setLocalRecipes(localRecipes.filter(recipe => recipe.id !== id));\r\n  }\r\n\r\n  function saveRecipe(recipe) {\r\n    let cleanedRecipe = cleanRecipe(recipe);\r\n    let _recipes;\r\n    if (recipe.id) {\r\n      _recipes = localRecipes.map(localRecipe =>\r\n        localRecipe.id === recipe.id ? cleanedRecipe : localRecipe\r\n      );\r\n    } else {\r\n      cleanedRecipe.id = ID();\r\n      _recipes = [cleanedRecipe, ...localRecipes];\r\n    }\r\n    setLocalRecipes(_recipes);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className=\"container\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <RecipeGrid recipes={localRecipes} />\r\n          </Route>\r\n          <Route path=\"/recipe/:id\">\r\n            <ViewRecipePage\r\n              saveRecipe={saveRecipe}\r\n              deleteRecipe={deleteRecipe}\r\n            />\r\n          </Route>\r\n          <Route path=\"/add\">\r\n            <AddRecipePage saveRecipe={saveRecipe} />\r\n          </Route>\r\n          <Route path=\"/shopping-list\">\r\n            <h1>Shopping List</h1>\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}