{"version":3,"sources":["common/Logo/Logo.js","common/Header/Header.js","common/Footer/Footer.js","appDispatcher.js","actions/actionTypes.js","_helpers.js","actions/recipeActions.js","hooks/useRecipeForm.js","components/EditableList/EditableList.js","components/RecipeForm/RecipeForm.js","pages/AddRecipePage.js","stores/recipeStore.js","components/TagList/TagList.js","components/DifficultyLevel/DifficultyLevel.js","components/RecipeSection/RecipeSection.js","components/FocusRecipe/FocusRecipe.js","pages/ViewRecipePage.js","components/RecipeCard/RecipeCard.js","components/RecipeGrid/RecipeGrid.js","pages/AllRecipesPage.js","App.js","serviceWorker.js","index.js"],"names":["Logo","id","height","viewBox","width","xmlns","className","style","fill","d","Header","to","Footer","href","title","dispatcher","Dispatcher","actionTypes","saveRecipe","deleteRecipe","loadRecipes","mockImage","recipeTemplate","categories","imgUrl","ingredients","instructions","difficulty","ID","Math","random","toString","substr","cleanList","list","filter","item","getLocalStorageRecipes","JSON","parse","window","localStorage","getItem","setLocalStorageRecipes","recipes","setItem","stringify","recipe","payloadRecipes","cleanedRecipe","_categories","_ingredients","_instructions","cleanRecipe","storedRecipes","map","localRecipe","dispatch","actionType","length","sampleRecipes","useRecipeForm","callback","useState","setRecipe","handlers","onChange","event","target","name","value","onListChange","index","_list","onDifficultyChange","val","onAddItem","preventDefault","onSubmit","EditableList","props","InputTag","inputTag","ListTag","ordered","items","key","placeholder","required","inputClassName","onClick","RecipeForm","type","initialRating","fullSymbol","emptySymbol","src","alt","AddRecipePage","history","push","recipeActions","useHistory","_recipes","recipeStore","this","on","removeListener","emit","find","EventEmitter","register","action","emitChange","TagList","tags","DifficultyLevel","level","readonly","RecipeSection","FocusRecipe","defaultProps","ViewRecipePage","setEditing","initialRecipe","setInitialRecipe","editing","useParams","useCallback","getRecipeById","useEffect","addChangeListener","getRecipes","removeChangeListener","_recipe","RecipeCard","backgroundImage","RecipeGrid","AllRecipesPage","localRecipes","setLocalRecipes","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.614e16d9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Logo() {\r\n  return (\r\n    <svg\r\n      id=\"Glyph\"\r\n      height=\"512\"\r\n      viewBox=\"0 0 512 512\"\r\n      width=\"512\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"logo\"\r\n    >\r\n      <path\r\n        style={{ fill: '#1f1f1f' }}\r\n        d=\"m392 64a87.115 87.115 0 0 0 -31.683 5.878 126.93 126.93 0 0 1 19.08 39.994 8 8 0 1 1 -15.422 4.256 112.016 112.016 0 0 0 -187.237-49.244 103.994 103.994 0 0 1 47.262 87.116 8 8 0 0 1 -16 0 88 88 0 1 0 -105.771 86.206 8 8 0 0 1 6.281 6.5l26.251 155.294h48.647l-7.387-103.43h.008c-.014-.189-.029-.377-.029-.569a8 8 0 0 1 15.971-.569h.008l7.47 104.568h48.551v-88a8 8 0 0 1 16 0v88h48.551l7.47-104.57h.008a8 8 0 0 1 15.971.57c0 .192-.015.38-.029.569h.008l-7.387 103.431h48.647l26.251-155.291a8 8 0 0 1 6.281-6.5 88.01 88.01 0 0 0 -17.771-174.209z\"\r\n      />\r\n      <path style={{ fill: '#1f1f1f' }} d=\"m136 416h240v64h-240z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../Logo/Logo';\r\nimport './Header.scss';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand\">\r\n          <Logo />\r\n          <h2>Recipe Box</h2>\r\n        </Link>\r\n        <nav>\r\n          <Link to=\"/add\" className=\"button icon-button add-recipe\">\r\n            Add new recipe\r\n          </Link>\r\n          <Link to=\"/shopping-list\" className=\"button icon-button list\">\r\n            Shopping List\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <nav>\r\n          <a href=\"https://github.com/NellyKostadinova\">GitHub</a>\r\n          <a href=\"https://www.linkedin.com/in/nelly-kostadinova-aab60196/\">\r\n            Linkedin\r\n          </a>\r\n        </nav>\r\n        <div className=\"credits\">\r\n          Icons made by{' '}\r\n          <a href=\"https://www.flaticon.com/authors/iconixar\" title=\"iconixar\">\r\n            iconixar\r\n          </a>{' '}\r\n          from{' '}\r\n          <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n            www.flaticon.com\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { Dispatcher } from 'flux';\r\n\r\nvar dispatcher = new Dispatcher();\r\n\r\nexport default dispatcher;\r\n","const actionTypes = {\r\n  saveRecipe: 'saveRecipe',\r\n  deleteRecipe: 'deleteRecipe',\r\n  loadRecipes: 'loadRecipes'\r\n};\r\n\r\nexport default actionTypes;\r\n","const mockImage =\r\n  'https://images.unsplash.com/photo-1517856497829-3047e3fffae1?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80';\r\n\r\nconst recipeTemplate = {\r\n  id: null,\r\n  title: '',\r\n  categories: [''],\r\n  imgUrl: mockImage,\r\n  ingredients: [''],\r\n  instructions: [''],\r\n  difficulty: 1\r\n};\r\n\r\nfunction ID() {\r\n  return (\r\n    '_' +\r\n    Math.random()\r\n      .toString(36)\r\n      .substr(2, 9)\r\n  );\r\n}\r\n\r\nfunction cleanList(list) {\r\n  return list.filter(item => item !== '');\r\n}\r\n\r\nfunction cleanRecipe(recipe) {\r\n  let _categories = cleanList(recipe.categories);\r\n  let _ingredients = cleanList(recipe.ingredients);\r\n  let _instructions = cleanList(recipe.instructions);\r\n  return {\r\n    ...recipe,\r\n    categories: _categories,\r\n    ingredients: _ingredients,\r\n    instructions: _instructions\r\n  };\r\n}\r\n\r\nfunction getLocalStorageRecipes() {\r\n  return JSON.parse(window.localStorage.getItem('rbRecipes'));\r\n}\r\n\r\nfunction setLocalStorageRecipes(recipes) {\r\n  window.localStorage.setItem('rbRecipes', JSON.stringify(recipes));\r\n}\r\n\r\nexport {\r\n  mockImage,\r\n  recipeTemplate,\r\n  ID,\r\n  cleanRecipe,\r\n  getLocalStorageRecipes,\r\n  setLocalStorageRecipes\r\n};\r\n","import dispatcher from '../appDispatcher';\r\nimport actionTypes from './actionTypes';\r\nimport {\r\n  ID,\r\n  cleanRecipe,\r\n  getLocalStorageRecipes,\r\n  setLocalStorageRecipes\r\n} from '../_helpers';\r\nimport sampleRecipes from '../assets/recipes.json';\r\n\r\nexport function saveRecipe(recipe) {\r\n  let cleanedRecipe = cleanRecipe(recipe);\r\n  let storedRecipes = getLocalStorageRecipes();\r\n  let payloadRecipes;\r\n  if (recipe.id) {\r\n    payloadRecipes = storedRecipes.map(localRecipe =>\r\n      localRecipe.id === recipe.id ? cleanedRecipe : localRecipe\r\n    );\r\n  } else {\r\n    cleanedRecipe.id = ID();\r\n    payloadRecipes = [cleanedRecipe, ...storedRecipes];\r\n  }\r\n\r\n  setLocalStorageRecipes(payloadRecipes);\r\n  dispatcher.dispatch({\r\n    actionType: actionTypes.saveRecipe,\r\n    recipes: payloadRecipes\r\n  });\r\n}\r\n\r\nexport function deleteRecipe(recipe) {\r\n  let payloadRecipes = getLocalStorageRecipes().filter(\r\n    _recipe => _recipe.id !== recipe.id\r\n  );\r\n\r\n  setLocalStorageRecipes(payloadRecipes);\r\n  dispatcher.dispatch({\r\n    actionType: actionTypes.deleteRecipe,\r\n    recipes: payloadRecipes\r\n  });\r\n}\r\n\r\nexport function loadRecipes() {\r\n  let storedRecipes = getLocalStorageRecipes();\r\n  let payloadRecipes;\r\n\r\n  if (storedRecipes && storedRecipes.length > 0) {\r\n    payloadRecipes = storedRecipes;\r\n  } else {\r\n    payloadRecipes = sampleRecipes.map(recipe => {\r\n      recipe.id = ID();\r\n      return recipe;\r\n    });\r\n    setLocalStorageRecipes(payloadRecipes);\r\n  }\r\n\r\n  dispatcher.dispatch({\r\n    actionType: actionTypes.loadRecipes,\r\n    recipes: payloadRecipes\r\n  });\r\n}\r\n","import { useState } from 'react';\r\n\r\nfunction useRecipeForm(callback) {\r\n  const [recipe, setRecipe] = useState({\r\n    id: null,\r\n    title: '',\r\n    categories: [''],\r\n    imgUrl: '',\r\n    ingredients: [''],\r\n    instructions: [''],\r\n    difficulty: 1\r\n  });\r\n\r\n  function onChange(event) {\r\n    setRecipe({ ...recipe, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  function onListChange(index, event) {\r\n    let _list = recipe[event.target.name];\r\n    _list[index] = event.target.value;\r\n    setRecipe({ ...recipe, [event.target.name]: _list });\r\n  }\r\n\r\n  function onDifficultyChange(val) {\r\n    setRecipe({ ...recipe, difficulty: val });\r\n  }\r\n\r\n  function onAddItem(event) {\r\n    event.preventDefault();\r\n    let _list = [...recipe[event.target.name], ''];\r\n    setRecipe({ ...recipe, [event.target.name]: _list });\r\n  }\r\n\r\n  function onSubmit(event) {\r\n    event.preventDefault();\r\n    callback();\r\n  }\r\n\r\n  return {\r\n    recipe,\r\n    setRecipe,\r\n    handlers: {\r\n      onChange,\r\n      onListChange,\r\n      onDifficultyChange,\r\n      onAddItem,\r\n      onSubmit\r\n    }\r\n  };\r\n}\r\n\r\nexport default useRecipeForm;\r\n","import React from 'react';\r\n\r\nfunction EditableList(props) {\r\n  const InputTag = props.inputTag || 'input';\r\n  const ListTag = props.ordered ? 'ol' : 'ul';\r\n\r\n  return (\r\n    <ListTag className={props.className}>\r\n      {props.items.map((item, index) => {\r\n        return (\r\n          <li key={index}>\r\n            <InputTag\r\n              name={props.name}\r\n              value={item}\r\n              placeholder={props.placeholder}\r\n              onChange={event => {\r\n                props.onChange(index, event);\r\n              }}\r\n              required={index === 0 ? true : false}\r\n              className={props.inputClassName}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n      <button className=\"add sm\" name={props.name} onClick={props.onAddItem}>\r\n        +\r\n      </button>\r\n    </ListTag>\r\n  );\r\n}\r\n\r\nexport default EditableList;\r\n","import React from 'react';\r\nimport { mockImage } from '../../_helpers';\r\nimport EditableList from '../EditableList/EditableList';\r\nimport Rating from 'react-rating';\r\n\r\nfunction RecipeForm(props) {\r\n  return (\r\n    <section>\r\n      <form onSubmit={props.onSubmit}>\r\n        <div className=\"focus-recipe\">\r\n          <div className=\"recipe-info\">\r\n            <input\r\n              name=\"title\"\r\n              value={props.title}\r\n              placeholder=\"My new recipe\"\r\n              required\r\n              onChange={props.onChange}\r\n              type=\"text\"\r\n              className=\"recipe-title\"\r\n            />\r\n            <EditableList\r\n              items={props.categories}\r\n              name=\"categories\"\r\n              placeholder=\"category\"\r\n              onChange={props.onListChange}\r\n              onAddItem={props.onAddItem}\r\n              className=\"tag-list\"\r\n              inputClassName=\"category-tag\"\r\n            />\r\n            <label>Difficulty: </label>\r\n            <Rating\r\n              initialRating={props.difficulty}\r\n              fullSymbol={<div className=\"full\"></div>}\r\n              emptySymbol={<div></div>}\r\n              className=\"scale\"\r\n              name=\"difficulty\"\r\n              onChange={props.onDifficultyChange}\r\n            />\r\n            <div className=\"recipe-section\">\r\n              <h2>Ingredients:</h2>\r\n              <EditableList\r\n                items={props.ingredients}\r\n                name=\"ingredients\"\r\n                onChange={props.onListChange}\r\n                onAddItem={props.onAddItem}\r\n              />\r\n            </div>\r\n            <div className=\"recipe-section\">\r\n              <h2>Instructions:</h2>\r\n              <EditableList\r\n                items={props.instructions}\r\n                name=\"instructions\"\r\n                onChange={props.onListChange}\r\n                onAddItem={props.onAddItem}\r\n                inputTag=\"textarea\"\r\n                ordered={true}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"recipe-image\">\r\n            <img src={props.imgUrl || mockImage} alt={props.title} />\r\n            <input\r\n              name=\"imgUrl\"\r\n              value={props.imgUrl}\r\n              placeholder=\"Image URL\"\r\n              onChange={props.onChange}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <input type=\"submit\" value=\"Save\" className=\"button\" />\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default RecipeForm;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as recipeActions from '../actions/recipeActions';\r\nimport useRecipeForm from '../hooks/useRecipeForm';\r\nimport RecipeForm from '../components/RecipeForm/RecipeForm';\r\n\r\nfunction AddRecipePage() {\r\n  const { recipe, handlers } = useRecipeForm(handleSave);\r\n  const history = useHistory();\r\n\r\n  function handleSave() {\r\n    history.push('/');\r\n    recipeActions.saveRecipe(recipe);\r\n  }\r\n\r\n  return <RecipeForm {...recipe} {...handlers} />;\r\n}\r\n\r\nexport default AddRecipePage;\r\n","import { EventEmitter } from 'events';\r\nimport dispatcher from '../appDispatcher';\r\nimport actionTypes from '../actions/actionTypes';\r\n\r\nconst changeEvent = 'change';\r\nlet _recipes = [];\r\nclass RecipeStore extends EventEmitter {\r\n  addChangeListener(callback) {\r\n    this.on(changeEvent, callback);\r\n  }\r\n\r\n  removeChangeListener(callback) {\r\n    this.removeListener(changeEvent, callback);\r\n  }\r\n\r\n  emitChange() {\r\n    this.emit(changeEvent);\r\n  }\r\n\r\n  getRecipes() {\r\n    return _recipes;\r\n  }\r\n\r\n  getRecipeById(id) {\r\n    return _recipes.find(recipe => recipe.id === id);\r\n  }\r\n}\r\n\r\nconst recipeStore = new RecipeStore();\r\n\r\ndispatcher.register(action => {\r\n  switch (action.actionType) {\r\n    case actionTypes.saveRecipe:\r\n      _recipes = action.recipes;\r\n      recipeStore.emitChange();\r\n      break;\r\n    case actionTypes.deleteRecipe:\r\n      _recipes = action.recipes;\r\n      recipeStore.emitChange();\r\n      break;\r\n    case actionTypes.loadRecipes:\r\n      _recipes = action.recipes;\r\n      recipeStore.emitChange();\r\n      break;\r\n    default:\r\n  }\r\n});\r\n\r\nexport default recipeStore;\r\n","import React from 'react';\r\nimport './TagList.scss';\r\n\r\nfunction TagList(props) {\r\n  return (\r\n    <ul className=\"tag-list\">\r\n      {props.tags.map((item, index) => {\r\n        return (\r\n          <li className=\"category-tag\" key={index}>\r\n            {item}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TagList;\r\n","import React from 'react';\r\nimport Rating from 'react-rating';\r\nimport './DifficultyLevel.scss';\r\n\r\nfunction DifficultyLevel(props) {\r\n  return (\r\n    <figure className=\"difficulty\">\r\n      <figcaption>Difficulty:</figcaption>\r\n      <Rating\r\n        initialRating={props.level}\r\n        readonly=\"readonly\"\r\n        fullSymbol={<div className=\"full\"></div>}\r\n        emptySymbol={<div></div>}\r\n        className=\"scale\"\r\n      />\r\n    </figure>\r\n  );\r\n}\r\n\r\nexport default DifficultyLevel;\r\n","import React from 'react';\r\nimport './RecipeSection.scss';\r\n\r\nfunction RecipeSection(props) {\r\n  const ListTag = props.ordered ? 'ol' : 'ul';\r\n\r\n  return (\r\n    <div className={props.className + ' recipe-section'}>\r\n      <h2>{props.title}</h2>\r\n      <ListTag>\r\n        {props.items.map((item, index) => {\r\n          return <li key={index}>{item}</li>;\r\n        })}\r\n      </ListTag>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeSection;\r\n","import React from 'react';\r\nimport { mockImage, recipeTemplate } from '../../_helpers';\r\nimport TagList from '../TagList/TagList';\r\nimport DifficultyLevel from '../DifficultyLevel/DifficultyLevel';\r\nimport RecipeSection from '../RecipeSection/RecipeSection';\r\nimport './FocusRecipe.scss';\r\n\r\nfunction FocusRecipe(props) {\r\n  return (\r\n    <section>\r\n      <article className=\"focus-recipe\">\r\n        <div className=\"recipe-info\">\r\n          <h1>{props.title}</h1>\r\n          <TagList tags={props.categories} />\r\n          <DifficultyLevel level={props.difficulty} />\r\n          <RecipeSection\r\n            title=\"Ingredients:\"\r\n            items={props.ingredients}\r\n            ordered={false}\r\n            className=\"recipe-ingredients\"\r\n          />\r\n          <RecipeSection\r\n            title=\"Instructions:\"\r\n            items={props.instructions}\r\n            ordered={true}\r\n            className=\"recipe-instructions\"\r\n          />\r\n        </div>\r\n        <div className=\"recipe-image\">\r\n          <img src={props.imgUrl || mockImage} alt={props.title}></img>\r\n        </div>\r\n      </article>\r\n    </section>\r\n  );\r\n}\r\n\r\nFocusRecipe.defaultProps = recipeTemplate;\r\n\r\nexport default FocusRecipe;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link, useParams, useHistory } from 'react-router-dom';\r\nimport * as recipeActions from '../actions/recipeActions';\r\nimport recipeStore from '../stores/recipeStore';\r\nimport useRecipeForm from '../hooks/useRecipeForm';\r\nimport RecipeForm from '../components/RecipeForm/RecipeForm';\r\nimport FocusRecipe from '../components/FocusRecipe/FocusRecipe';\r\n\r\nfunction ViewRecipePage() {\r\n  const { recipe, setRecipe, handlers } = useRecipeForm(handleSave);\r\n  const [initialRecipe, setInitialRecipe] = useState({});\r\n  const [editing, setEditing] = useState(false);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const onChange = useCallback(() => {\r\n    setInitialRecipe(recipeStore.getRecipeById(id));\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    recipeStore.addChangeListener(onChange);\r\n    let storeRecipes = recipeStore.getRecipes();\r\n    if (storeRecipes.length <= 0) {\r\n      recipeActions.loadRecipes();\r\n    } else {\r\n      setInitialRecipe(recipeStore.getRecipeById(id));\r\n    }\r\n    return () => {\r\n      recipeStore.removeChangeListener(onChange);\r\n    };\r\n  }, [id, onChange]);\r\n\r\n  useEffect(() => {\r\n    setRecipe(initialRecipe);\r\n  }, [initialRecipe, setRecipe, editing]);\r\n\r\n  function handleEdit() {\r\n    setEditing(true);\r\n  }\r\n\r\n  function handleCancel() {\r\n    setEditing(false);\r\n  }\r\n\r\n  function handleSave() {\r\n    recipeActions.saveRecipe(recipe);\r\n    setEditing(false);\r\n  }\r\n\r\n  function handleDelete() {\r\n    history.push('/');\r\n    recipeActions.deleteRecipe(recipe);\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <nav className=\"recipe-nav\">\r\n        <Link to=\"/\" className=\"button icon-button back\">\r\n          Back\r\n        </Link>\r\n        <button className=\"edit\" onClick={editing ? handleCancel : handleEdit}>\r\n          {editing ? 'Cancel' : 'Edit'}\r\n        </button>\r\n        <button className=\"danger\" onClick={handleDelete}>\r\n          Delete\r\n        </button>\r\n      </nav>\r\n      {editing ? (\r\n        <RecipeForm {...recipe} {...handlers} />\r\n      ) : (\r\n        <FocusRecipe {...initialRecipe} />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ViewRecipePage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { mockImage } from '../../_helpers';\r\nimport TagList from '../TagList/TagList';\r\nimport './RecipeCard.scss';\r\n\r\nfunction RecipeCard(props) {\r\n  return (\r\n    <div className=\"recipe-card\">\r\n      <div\r\n        className=\"card-img\"\r\n        style={{ backgroundImage: `url(${props.imgUrl || mockImage})` }}\r\n      ></div>\r\n      <div className=\"card-info\">\r\n        <TagList tags={props.categories} />\r\n        <h3>{props.title}</h3>\r\n        <Link to={`/recipe/${props.id}`}>\r\n          <button>Open recipe</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeCard;\r\n","import React from 'react';\r\nimport RecipeCard from '../RecipeCard/RecipeCard';\r\nimport './RecipeGrid.scss';\r\n\r\nfunction RecipeGrid(props) {\r\n  return (\r\n    <section className=\"recipes-grid\">\r\n      {props.recipes.map(recipe => {\r\n        return <RecipeCard {...recipe} key={recipe.id} />;\r\n      })}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default RecipeGrid;\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as recipeActions from '../actions/recipeActions';\r\nimport recipeStore from '../stores/recipeStore';\r\nimport RecipeGrid from '../components/RecipeGrid/RecipeGrid';\r\n\r\nfunction AllRecipesPage() {\r\n  const [localRecipes, setLocalRecipes] = useState(recipeStore.getRecipes());\r\n\r\n  useEffect(() => {\r\n    recipeStore.addChangeListener(onChange);\r\n    let storeRecipes = recipeStore.getRecipes();\r\n    if (storeRecipes.length <= 0) {\r\n      recipeActions.loadRecipes();\r\n    }\r\n    return () => {\r\n      recipeStore.removeChangeListener(onChange);\r\n    };\r\n  }, []);\r\n\r\n  function onChange() {\r\n    setLocalRecipes(recipeStore.getRecipes());\r\n  }\r\n\r\n  return <RecipeGrid recipes={localRecipes} />;\r\n}\r\n\r\nexport default AllRecipesPage;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Header from './common/Header/Header';\r\nimport Footer from './common/Footer/Footer';\r\nimport AddRecipePage from './pages/AddRecipePage';\r\nimport ViewRecipePage from './pages/ViewRecipePage';\r\nimport AllRecipesPage from './pages/AllRecipesPage';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className=\"container\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <AllRecipesPage />\r\n          </Route>\r\n          <Route path=\"/recipe/:id\">\r\n            <ViewRecipePage />\r\n          </Route>\r\n          <Route path=\"/add\">\r\n            <AddRecipePage />\r\n          </Route>\r\n          <Route path=\"/shopping-list\">\r\n            <h1>Shopping List</h1>\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <HashRouter basename=\"/\">\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}